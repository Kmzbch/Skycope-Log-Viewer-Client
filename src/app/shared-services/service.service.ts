import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { Observable } from 'rxjs';
import { catchError, map, tap } from 'rxjs/operators';
import { ServiceModel } from 'src/app/models/ServiceModel';
import { UserModel } from '../models/UserModel';
import { AuthService } from './auth.service';

@Injectable({
  providedIn: 'root'
})
export class ServiceService {

  constructor(
    public router: Router, 
    private http: HttpClient,
    private authService: AuthService
    ) { }


  testGetLog(): Observable<any> {

    return this.http.get<any>('/api/test/log');

  }

      // helper methods
      public getServiceLog(url: string): any {
        let returnValue = '';

        console.log(url);
        if (url === '1') {
            returnValue =
                '' +
                '2021-07-04 13:13:50,483 - INFO - This is a sample info log and generated by .service1.py for the purpose of simulating a service.\n' +
                '2021-07-04 13:13:50,484 - INFO - You may use a KEYWORD to filter a line!\n' +
                '2021-07-04 13:13:50,485 - INFO - You may use a KEYWORD to be highlighted in a line!\n' +
                '2021-07-04 13:13:51,070 - INFO - This is a sample info log and generated by .service1.py for the purpose of simulating a service.\n' +
                '2021-07-04 13:13:51,071 - INFO - You may use a KEYWORD to filter a line!\n' +
                '2021-07-04 13:13:51,072 - INFO - You may use a KEYWORD to be highlighted in a line!\n' +
                '2021-07-04 13:13:52,048 - INFO - This is a sample info log and generated by .service1.py for the purpose of simulating a service.\n' +
                '2021-07-04 13:13:52,049 - INFO - You may use a KEYWORD to filter a line!\n';
        }
        else if (url === '2') {
            returnValue = 'BBBB;';
        }

        return returnValue;
    }

      // get services at random for testing
      public getServiceOptions(userId: number): Observable<ServiceModel[]> {
        // const currentUser : UserModel | null = this.authService.currentUserValue;
        return this.http.get<any>(`/api/services?user_id=${userId}`).pipe(
          map((res) => {
              return res.result;
          }))


    }

}
